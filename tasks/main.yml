---
- name: detect Linux variables
  import_tasks: linux_vars.yml
  when: ansible_os_family != "Darwin"

- name: detect Mac OS X variables
  import_tasks: osx_vars.yml
  when: ansible_os_family == "Darwin"

- name: assert home directory is detected
  assert: { that: user_home != "" }
- name: assert current shell is detected
  assert: { that: user_shell != "" }

- name: clone bash_it for {{ user }}
  git:
    repo: "{{ repository }}"
    dest: "{{ user_home }}/.bash_it"
    version: "{{ version }}"
  become_user: "{{ user }}"

- name: change shell to bash for {{ user }}
  become: true
  user:
    name: '{{ user }}'
    shell: '/bin/bash'
  when: user_shell != "/bin/bash"

- name: install bash_it on .bashrc for {{ user }}
  lineinfile:
    dest: "{{ user_home }}/.bashrc"
    create: yes
    owner: "{{ user }}"
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
  with_items:
    - { regexp: '^export BASH_IT=', line: 'export BASH_IT="$HOME/.bash_it"' }
    - { regexp: '^export BASH_IT_THEME=', line: 'export BASH_IT_THEME={{ theme }}' }
    - { regexp: '^source \$BASH_IT', line: 'source $BASH_IT/bash_it.sh' }

- name: initialize bash_it directories for {{ user }}
  file:
    path: "{{ user_home }}/.bash_it/{{ item }}/enabled"
    state: directory
    owner: "{{ user }}"
  with_items:
    - "plugins"
    - "aliases"
    - "completion"

- name: install bash_it plugins for {{ user }}
  file:
    src: "{{ user_home }}/.bash_it/plugins/available/{{ item }}.plugin.bash"
    dest: "{{ user_home }}/.bash_it/plugins/enabled/{{ item }}.plugin.bash"
    state: link
    owner: "{{ user }}"
  with_items: "{{ plugins }}"
  when: plugins is defined

- name: install bash_it aliases for {{ user }}
  file:
    src: "{{ user_home }}/.bash_it/aliases/available/{{ item }}.aliases.bash"
    dest: "{{ user_home }}/.bash_it/aliases/enabled/{{ item }}.aliases.bash"
    state: link
    owner: "{{ user }}"
  with_items: "{{ aliases }}"
  when: aliases is defined

- name: install bash_it completions for {{ user }}
  file:
    src: "{{ user_home }}/.bash_it/completion/available/{{ item }}.completion.bash"
    dest: "{{ user_home }}/.bash_it/completion/enabled/{{ item }}.completion.bash"
    state: link
    owner: "{{ user }}"
  with_items: "{{ completions }}"
  when: completions is defined

